{"version":3,"sources":["http/axios.js","http/api.js","components/githubLogo/GitHubLogo.js","tools/tools.js","components/content/Content.js","App.js","serviceWorker.js","index.js"],"names":["GET","url","params","Promise","resolve","reject","axios","get","then","res","catch","err","defaults","timeout","headers","post","put","baseURL","interceptors","request","use","config","method","response","api","blogRepo","userRepo","GitHubLogo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","href","className","aria-label","target","width","height","viewBox","aria-hidden","d","fill","style","transformOrigin","Component","formatJSONDate","jsonDate","Date","toJSON","toISOString","replace","Content","_this$props","blogData","userData","styles","table","margin","textAlign","boxShadow","link","color","Table","celled","selectable","inverted","Header","Row","HeaderCell","Icon","name","collapsing","Body","keys","map","key","warning","fork","Cell","description","created_at","split","Button","Group","primary","rel","Or","positive","disabled","homepage","stargazers_count","forks_count","App","getBlogRepo","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","setState","data","t0","console","log","stop","getUserRepo","_callee2","_context2","window","scrollTo","all","_this$state","components_githubLogo_GitHubLogo","content_Content","getFullYear","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c4f4492.chunk.js","sourcesContent":["import axios from 'axios';\n\n// config timeout\naxios.defaults.timeout = 5 * 10000;\n\n// config cookie\n// axios.defaults.withCredentials = true\n\n// config request header\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.put['Content-Type'] = 'application/json';\n\n// config base url\naxios.defaults.baseURL = 'https://api.github.com';\n\n\n// config request interceptors\naxios.interceptors.request.use(\n  (config) => {\n    if (config.method === 'post') {\n      // config.data = qs.stringify(config.data);\n    }\n    return config;\n  },\n  err => Promise.reject(err),\n);\n// config response interceptors\naxios.interceptors.response.use(\n  res => res,\n  err => Promise.reject(err),\n);\n\n// GET\nexport function GET(url, params) {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url, { params })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n\n// POST\nexport function POST(url, params, config) {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(url, params, config)\n      .then(\n        (res) => {\n          resolve(res);\n        },\n        (err) => {\n          reject(err);\n        },\n      )\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n\n// PUT\nexport function PUT(url, params) {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(url, params)\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n\n// DELETE\nexport function DELETE(url, params) {\n  return new Promise((resolve, reject) => {\n    axios\n      .delete(url, { data: params })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n","import { GET } from './axios';\n\nclass Api {\n  blogRepo = () => GET('/orgs/Yancey-Blog/repos', {});\n  userRepo = () => GET('/users/YanceyOfficial/repos', {});\n}\n\nconst api = new Api();\n\nexport default api;\n","import React, { Component } from 'react';\nimport './GitHubLogo.css';\n\nclass GitHubLogo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillMount() {\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillUnmount() {\n  }\n\n  render() {\n    return (\n        <a href=\"https://github.com/YanceyOfficial\" className=\"github-corner\" aria-label=\"View source on GitHub\"\n           target=\"_blank\">\n          <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" className=\"github_svg\" aria-hidden=\"true\">\n            <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n            <path\n              d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n              fill=\"currentColor\" style={{transformOrigin: '130px 106px'}} className=\"octo-arm\"></path>\n            <path\n              d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n              fill=\"currentColor\" className=\"octo-body\"></path>\n          </svg>\n        </a>\n    );\n  }\n}\n\nexport default GitHubLogo;\n","export const formatJSONDate = (jsonDate) => {\n  return new Date(+new Date(new Date(jsonDate).toJSON()) + 8 * 3600 * 1000).toISOString()\n    .replace(/T/g, ' ').replace(/\\.[\\d]{3}Z/, '');\n};\n","import React, {\n  Component\n} from 'react';\nimport { Icon, Button, Table } from 'semantic-ui-react';\nimport { formatJSONDate } from \"../../tools/tools\";\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillMount() {\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillUnmount() {\n  }\n\n  render() {\n    const {blogData, userData} = this.props;\n    const styles = {\n      table: {\n        width: '98%',\n        margin: '0 auto',\n        textAlign: 'center',\n        boxShadow: '0 1px 20px -8px rgba(0,0,0,.5)',\n      },\n      link: {\n        color: '#fff'\n      }\n    };\n    return (\n      <Table celled selectable style={styles.table} inverted>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell><Icon name='file'/>Name</Table.HeaderCell>\n            <Table.HeaderCell collapsing width={5}><Icon name='info'/>Intro</Table.HeaderCell>\n            <Table.HeaderCell><Icon name='clock'/>Created Date</Table.HeaderCell>\n            <Table.HeaderCell><Icon name='linkify'/>Link</Table.HeaderCell>\n            <Table.HeaderCell><Icon name='star'/>Stargazers Count</Table.HeaderCell>\n            <Table.HeaderCell><Icon name='fork'/>Forks Count</Table.HeaderCell>\n            <Table.HeaderCell><Icon name='cloud download'/>Is Fork?</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {\n            Object.keys(blogData).map(key => (\n              <Table.Row\n                key={key}\n                warning={blogData[key].fork}\n              >\n                <Table.Cell style={{textAlign: 'left'}}>\n                  {blogData[key].name}\n                </Table.Cell>\n                <Table.Cell style={{textAlign: 'left'}}>\n                  {blogData[key].description}\n                </Table.Cell>\n                <Table.Cell>\n                  {formatJSONDate(blogData[key].created_at).split(' ')[0]}\n                </Table.Cell>\n                <Table.Cell>\n                  <Button.Group>\n                    <Button\n                      primary\n                    >\n                      <a href={blogData[key].url} style={styles.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        GitHub\n                      </a>\n                    </Button>\n                    <Button.Or/>\n                    <Button\n                      positive\n                      disabled={!blogData[key].homepage}\n                    >\n                      <a href={blogData[key].homepage} style={styles.link} target=\"_blank\"\n                         rel=\"noopener noreferrer\">\n                        Demo\n                      </a>\n                    </Button>\n                  </Button.Group>\n                </Table.Cell>\n                <Table.Cell>\n                  {blogData[key].stargazers_count}\n                </Table.Cell>\n                <Table.Cell>\n                  {blogData[key].forks_count}\n                </Table.Cell>\n                <Table.Cell>\n                  {blogData[key].fork ? 'Yes' : 'No'}\n                </Table.Cell>\n              </Table.Row>\n            ))\n          }\n          {\n            Object.keys(userData).map(key => (\n              <Table.Row\n                key={key}\n              >\n                <Table.Cell style={{textAlign: 'left'}}>\n                  {userData[key].name}\n                </Table.Cell>\n                <Table.Cell style={{textAlign: 'left'}}>\n                  {userData[key].description}\n                </Table.Cell>\n                <Table.Cell>\n                  {formatJSONDate(userData[key].created_at).split(' ')[0]}\n                </Table.Cell>\n                <Table.Cell>\n                  <Button.Group>\n                    <Button\n                      primary\n                    >\n                      <a href={userData[key].url} style={styles.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        GitHub\n                      </a>\n                    </Button>\n                    <Button.Or/>\n                    <Button\n                      positive\n                      disabled={!userData[key].homepage}\n                    >\n                      <a href={userData[key].homepage} style={styles.link} target=\"_blank\"\n                         rel=\"noopener noreferrer\">\n                        Demo\n                      </a>\n                    </Button>\n                  </Button.Group>\n                </Table.Cell>\n                <Table.Cell>\n                  {userData[key].stargazers_count}\n                </Table.Cell>\n                <Table.Cell>\n                  {userData[key].forks_count}\n                </Table.Cell>\n                <Table.Cell>\n                  {userData[key].fork ? 'Yes' : 'No'}\n                </Table.Cell>\n              </Table.Row>\n            ))\n          }\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from 'react';\nimport api from './http/api';\nimport GitHubLogo from './components/githubLogo/GitHubLogo';\nimport Content from './components/content/Content';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blogData: [],\n      userData: [],\n    };\n  }\n\n  componentWillMount() {\n    window.scrollTo(0, 0);\n  }\n\n  componentDidMount() {\n    Promise.all([this.getBlogRepo(), this.getUserRepo()]);\n  }\n\n  componentWillUnmount() {\n  }\n\n  getBlogRepo = async () => {\n    try {\n      const res = await api.blogRepo();\n      this.setState({\n        blogData: res.data,\n      });\n    } catch (e) {\n      console.log('unknown error');\n    }\n  };\n  getUserRepo = async () => {\n    try {\n      const res = await api.userRepo();\n      this.setState({\n        userData: res.data,\n      })\n    } catch (e) {\n      console.log('unknown error');\n    }\n  };\n\n  render() {\n    const {blogData, userData} = this.state;\n    return (\n      <div className=\"App\">\n        <GitHubLogo/>\n        <h1 className=\"title\">The Open Source Projects <br/> List Of Yancey</h1>\n        <Content blogData={blogData} userData={userData}/>\n        <footer className=\"copyright\">\n          <a href=\"https://www.yanceyleo.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Copyright &copy;\n            {' '}\n            {new Date().getFullYear()}\n            {' '}\n            Yancey Inc. All rights reserved.\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}